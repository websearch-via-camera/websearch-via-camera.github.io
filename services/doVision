import requests
import re
import json

def loggly(msg):
    headers = {
    "Content-Type": "application/json",
    }
    payload = {
        "doVision": msg,
    }
    response = requests.post("http://logs-01.loggly.com/inputs/8d9d949e-8908-4525-9085-6039883fbb55/tag/http/", headers=headers, json=payload)

api_key = "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"

headers = {
  "Content-Type": "application/json",
  "Authorization": f"Bearer {api_key}"
}

def main(args):
    #base64_image = args.get("base64", sample_image)
    loggly(args.get("http"))
    base64_image = args.get("base64", "")
    if base64_image == "":
        return {"body": ['no image detected']}
    # loggly(base64_image)
    payload = {
    "model": "gpt-4-vision-preview",
    "messages": [
        {
        "role": "user",
        "content": [
            {
            "type": "text",
            "text": "If I were to search the web with this image, what are some queries in a list?"
            },
            {
            "type": "image_url",
            "image_url": {
                "url": base64_image
            }
            }
        ]
        }
    ],
    "max_tokens": 1300
    }
    response = requests.post("https://api.openai.com/v1/chat/completions", headers=headers, json=payload)
    loggly(response.json())
    try:
        if response.json()['choices'][0]['message']['content'] == "":
            loggly('ERROR response is short') 
    except:
        loggly('ERROR response misses choices key') 
        pass

    text=response.json()['choices'][0]['message']['content']
    loggly(text)
    list_items = re.findall(r'\d+\.\s(.*?)(?=\s\d+\.|$)', text)
    loggly(list_items)
    if not len(list_items):
        pattern = r'- (.*?)(?=\s-|$)'
        list_items = re.findall(pattern, text)
        loggly("second attempt at parsing text")
        loggly(list_items)
    return {"body": list_items}
